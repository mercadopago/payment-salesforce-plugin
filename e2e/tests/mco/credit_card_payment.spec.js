import { test, expect } from "@playwright/test";
import { addProductToCart, addProductToLoggedCart } from "../../flows/add_mco_to_cart";
import goToCheckout from "../../flows/go_to_checkout_mco";
import fillGuestEmail from "../../flows/fill_guest_email";
import fillShippingForm from "../../flows/fill_shipping_form";
import { fillCardData, fillDocumentData, selectSavedCard } from "../../flows/fill_card_form";
import { amexApro, masterApro } from "../../data/credit_card";
import { base, mco } from "../../data/stores";
import { fillLoginForm } from "../../flows/fill_login_form";
import { validateSavedCard } from "../../flows/validate_saved_card";
import { deleteOneSavedCard } from "../../flows/delete_one_saved_card";
import { cleanUser } from "../../data/user";

test("test success pay as guest with amex", async ({ page }) => {
  const storeUrl = base.storeUrl;
  await addProductToCart(page, storeUrl);
  await goToCheckout(page, storeUrl);
  await fillGuestEmail(page);
  await fillShippingForm(page);
  await fillCardData(page, amexApro);
  await fillDocumentData(page, amexApro);
  await page.getByRole("button", { name: "Next: Place Order" }).click();
  await page.waitForTimeout(1000);
  await page.getByRole("button", { name: "Place Order" }).click();
  await expect(page.locator("h1")).toContainText("Thank You");
  await expect(page.locator("#maincontent")).toContainText("Credit " + amexApro.cardName);
});

test("test success pay as guest with master", async ({ page }) => {
  const storeUrl = base.storeUrl;
  await addProductToCart(page, storeUrl);
  await goToCheckout(page, storeUrl);
  await fillGuestEmail(page);
  await fillShippingForm(page);
  await fillCardData(page, masterApro);
  await fillDocumentData(page, masterApro);
  await page.getByRole("button", { name: "Next: Place Order" }).click();
  await page.waitForTimeout(1000);
  await page.getByRole("button", { name: "Place Order" }).click();
  await expect(page.locator("h1")).toContainText("Thank You");
  await expect(page.locator("#maincontent")).toContainText("Credit " + masterApro.cardName);
});

test("test success pay new and saved amex card, and deleting card in the end", async ({ page }) => {
  await fillLoginForm(page, base.storeUrl, cleanUser);
  await addProductToLoggedCart(page, base.storeUrl);
  await goToCheckout(page, base.storeUrl);
  await fillShippingForm(page);
  await fillDocumentData(page, amexApro);
  await fillCardData(page, amexApro);
  await page.getByRole('button', { name: 'Next: Place Order' }).click();
  await page.waitForTimeout(2000);
  await page.getByRole('button', { name: 'Place Order' }).click();
  await expect(page.locator("h1")).toContainText("Thank You");
  await expect(page.locator("#maincontent")).toContainText("Credit " + amexApro.cardName);
  await page.waitForTimeout(4000);
  await validateSavedCard(page, amexApro);
  await addProductToLoggedCart(page, base.storeUrl);
  await goToCheckout(page, base.storeUrl);
  await page.getByRole("button", { name: "Next: Payment" }).click();
  await selectSavedCard(page, amexApro);
  await page.getByRole('button', { name: 'Next: Place Order' }).click();
  await page.waitForTimeout(2000);
  await page.getByRole('button', { name: 'Place Order' }).click();
  await page.waitForTimeout(4000);
  await expect(page.locator("h1")).toContainText("Thank You");
  await expect(page.locator("#maincontent")).toContainText("Credit " + amexApro.cardName);
  await validateSavedCard(page, amexApro);
  await page.waitForTimeout(1000);
  await deleteOneSavedCard(page);
  await expect(page.getByText('No saved payment instruments')).toBeVisible();
});

test("test success pay new and saved master card, and deleting card in the end", async ({ page }) => {
  await fillLoginForm(page, base.storeUrl, cleanUser);
  await addProductToLoggedCart(page, base.storeUrl);
  await goToCheckout(page, base.storeUrl);
  await fillShippingForm(page);
  await fillDocumentData(page, masterApro);
  await fillCardData(page, masterApro);
  await page.getByRole('button', { name: 'Next: Place Order' }).click();
  await page.waitForTimeout(1000);
  await page.getByRole('button', { name: 'Place Order' }).click();
  await page.waitForTimeout(4000);
  await expect(page.locator("h1")).toContainText("Thank You");
  await expect(page.locator("#maincontent")).toContainText("Credit " + masterApro.cardName);
  await page.waitForTimeout(2000);
  await validateSavedCard(page, masterApro);
  await addProductToLoggedCart(page, base.storeUrl);
  await goToCheckout(page, base.storeUrl);
  await page.getByRole("button", { name: "Next: Payment" }).click();
  await selectSavedCard(page, masterApro);
  await page.getByRole('button', { name: 'Next: Place Order' }).click();
  await page.waitForTimeout(2000);
  await page.getByRole('button', { name: 'Place Order' }).click();
  await page.waitForTimeout(4000);
  await expect(page.locator("h1")).toContainText("Thank You");
  await expect(page.locator("#maincontent")).toContainText("Credit " + masterApro.cardName);
  await validateSavedCard(page, masterApro);
  await page.waitForTimeout(1000);
  await deleteOneSavedCard(page);
  await expect(page.getByText('No saved payment instruments')).toBeVisible();
});